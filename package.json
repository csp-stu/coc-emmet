{
  "name": "coc-emmet",
  "version": "1.0.0",
  "description": "emmet extension for coc",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "engines": {
    "coc": "^0.0.29"
  },
  "scripts": {
    "clean": "rimraf lib",
    "build": "tsc -p tsconfig.json",
    "prepare": "yarn clean && yarn build"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Emmet",
      "properties": {
        "emmet.showExpandedAbbreviation": {
          "type": [
            "string"
          ],
          "enum": [
            "never",
            "always",
            "inMarkupAndStylesheetFilesOnly"
          ],
          "default": "always",
          "markdownDescription": "%emmetShowExpandedAbbreviation%"
        },
        "emmet.showAbbreviationSuggestions": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "%emmetShowAbbreviationSuggestions%"
        },
        "emmet.includeLanguages": {
          "type": "object",
          "default": {},
          "markdownDescription": "%emmetIncludeLanguages%"
        },
        "emmet.variables": {
          "type": "object",
          "properties": {
            "lang": {
              "type": "string",
              "default": "en"
            },
            "charset": {
              "type": "string",
              "default": "UTF-8"
            }
          },
          "default": {},
          "description": "%emmetVariables%"
        },
        "emmet.syntaxProfiles": {
          "type": "object",
          "default": {},
          "description": "%emmetSyntaxProfiles%"
        },
        "emmet.excludeLanguages": {
          "type": "array",
          "default": [
            "markdown"
          ],
          "description": "%emmetExclude%"
        },
        "emmet.triggerExpansionOnTab": {
          "type": "boolean",
          "default": false,
          "description": "%emmetTriggerExpansionOnTab%"
        },
        "emmet.preferences": {
          "type": "object",
          "default": {},
          "description": "%emmetPreferences%",
          "properties": {
            "css.intUnit": {
              "type": "string",
              "default": "px",
              "description": "%emmetPreferencesIntUnit%"
            },
            "css.floatUnit": {
              "type": "string",
              "default": "em",
              "description": "%emmetPreferencesFloatUnit%"
            },
            "css.propertyEnd": {
              "type": "string",
              "default": ";",
              "description": "%emmetPreferencesCssAfter%"
            },
            "sass.propertyEnd": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesSassAfter%"
            },
            "stylus.propertyEnd": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesStylusAfter%"
            },
            "css.valueSeparator": {
              "type": "string",
              "default": ": ",
              "description": "%emmetPreferencesCssBetween%"
            },
            "sass.valueSeparator": {
              "type": "string",
              "default": ": ",
              "description": "%emmetPreferencesSassBetween%"
            },
            "stylus.valueSeparator": {
              "type": "string",
              "default": " ",
              "description": "%emmetPreferencesStylusBetween%"
            },
            "bem.elementSeparator": {
              "type": "string",
              "default": "__",
              "description": "%emmetPreferencesBemElementSeparator%"
            },
            "bem.modifierSeparator": {
              "type": "string",
              "default": "_",
              "description": "%emmetPreferencesBemModifierSeparator%"
            },
            "filter.commentBefore": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesFilterCommentBefore%"
            },
            "filter.commentAfter": {
              "type": "string",
              "default": "\n<!-- /[#ID][.CLASS] -->",
              "description": "%emmetPreferencesFilterCommentAfter%"
            },
            "filter.commentTrigger": {
              "type": "array",
              "default": [
                "id",
                "class"
              ],
              "description": "%emmetPreferencesFilterCommentTrigger%"
            },
            "format.noIndentTags": {
              "type": "array",
              "default": [
                "html"
              ],
              "description": "%emmetPreferencesFormatNoIndentTags%"
            },
            "format.forceIndentationForTags": {
              "type": "array",
              "default": [
                "body"
              ],
              "description": "%emmetPreferencesFormatForceIndentTags%"
            },
            "profile.allowCompactBoolean": {
              "type": "boolean",
              "default": false,
              "description": "%emmetPreferencesAllowCompactBoolean%"
            },
            "css.webkitProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssWebkitProperties%"
            },
            "css.mozProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssMozProperties%"
            },
            "css.oProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssOProperties%"
            },
            "css.msProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssMsProperties%"
            },
            "css.fuzzySearchMinScore": {
              "type": "number",
              "default": 0.3,
              "description": "%emmetPreferencesCssFuzzySearchMinScore%"
            }
          }
        },
        "emmet.optimizeStylesheetParsing": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "%emmetOptimizeStylesheetParsing%"
        }
      }
    }
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@chemzqm/tsconfig": "^0.0.3",
    "@chemzqm/tslint-config": "^1.0.17",
    "@types/node": "^10.11.7",
    "typescript": "^3.1.2",
    "coc.nvim": "^0.0.23",
    "tslint": "^5.11.0",
    "rimraf": "^2.6.2"
  },
  "dependencies": {
    "@emmetio/css-parser": "ramya-rao-a/css-parser#vscode",
    "@emmetio/html-matcher": "^0.3.3",
    "@emmetio/math-expression": "^0.1.1",
    "vscode-emmet-helper": "^1.2.12",
    "tslib": "^1.9.3",
    "vscode-languageserver-protocol": "^3.13.0",
    "vscode-uri": "^1.0.6"
  }
}
